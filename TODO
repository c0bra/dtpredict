TODO list for Perl module DateTime::Even::Predict

2/2/2009
* [IDEA] It would be be cool if you could pass your own buckets in with a certain type, so you could, say,
  look for recurrence based on intervals of 6 seconds, or 18 days, whatever.
* We need to be able to handle recording more than one interval per diff. If the dates are all offset from
  each other by 1 day 6 hours (May 1, 3:00; May 2, 6:00), we can't be predicting a new date that's
  exactly 1 day after the most recent one.
    ^ The best way to do this is probably to record intervals as epoch seconds, so everything is taken
      into account. Maybe record epoch seconds in addition to whole regular intervals like days & hours.

2/1/2009
* Add kls to Predict::new(), and then allow predict() to override them or add news ones (??)
* add_date() and add_dates() needs to properly validate dates passed in

1/27/2009
* Profile.pm needs to check bucket names that get passed in to see if they actually exist. Right now
  it tries to clone them and dies ungracefully.

12/22/2009
* Can we combine the interval and distinct buckets into one full bucket list? The names should mean there's no
  collisions (just confusion, maybe too much) and the 'type' identifier says how to use it. Probably not a
  good idea.
* train() needs to reset the bucket values each time it's called; right now they'll just increment endlessly
  -- This should be done but I'm not 100% sure.

12/18/2009
* Is there a way to use import() outside of a BEGIN block so that export tags can be imported?
* Change new() and predict() so options can be globally set in the object and overridden in
  each call to predict().
* We could create a bucket for is_weekend_day and create a custom callback for the accessor.
  We'd have to do duration differently, though.

12/17/2009
* Finish writing up pod so module can be alpha-released on CPAN
* Right now we are trimming off any date-part that is smaller than the smallest bucket we
  have turned on. We need to make it so this is done in the comparisons, rather than
  actually modifying dates we are given. OR MAYBE NOT, because of truncate()?

12/16/2009
* Due to possible DoS attack that can be done through very large duration operations (thousands
  of years in the future, etc), we'll need to add some sort of protection, I think.

??/??/????
* Add a clustering() method so that clustering can be turned on or off whenever
